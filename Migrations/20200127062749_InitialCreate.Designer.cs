// <auto-generated />
using AgileMethodsTestFramework.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgileMethodsTestFramework.Migrations
{
    [DbContext(typeof(AMContext))]
    [Migration("20200127062749_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("IdSubject");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.QuestionCorrectAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("IdCorrectAnswer");

                    b.Property<long>("IdQuestion");

                    b.HasKey("Id");

                    b.ToTable("QuestionCorrectAnswers");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.QuestionPossibleAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("IdPossibleAnswer");

                    b.Property<long>("IdQuestion");

                    b.HasKey("Id");

                    b.ToTable("QuestionPossibleAnswers");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.ResultTest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("IdResults");

                    b.Property<long>("IdTest");

                    b.HasKey("Id");

                    b.ToTable("ResultsTests");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("IdUser");

                    b.Property<int>("Number");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.SubjectUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("IdSubject");

                    b.Property<long>("IdUser");

                    b.HasKey("Id");

                    b.ToTable("SubjectsUsers");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("IdUser");

                    b.Property<string>("Office");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Test", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("IdSubject");

                    b.Property<long>("IdTeacher");

                    b.HasKey("Id");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.TestAnswer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("IdQuestion");

                    b.Property<long>("IdStudent");

                    b.Property<long>("IdTest");

                    b.Property<long>("IdTestAnswers");

                    b.HasKey("Id");

                    b.ToTable("TestAnswers");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.TestQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("IdQuestion");

                    b.Property<long>("IdTest");

                    b.HasKey("Id");

                    b.ToTable("TestQuestions");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.TestResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Grade");

                    b.Property<long>("IdStudent");

                    b.HasKey("Id");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
