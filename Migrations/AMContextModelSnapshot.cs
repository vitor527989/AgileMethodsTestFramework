// <auto-generated />
using System;
using AgileMethodsTestFramework.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AgileMethodsTestFramework.Migrations
{
    [DbContext(typeof(AMContext))]
    partial class AMContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<long?>("QuestionId");

                    b.Property<long?>("QuestionId1");

                    b.Property<long?>("TestResultId");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuestionId1");

                    b.HasIndex("TestResultId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Question", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("TestId");

                    b.Property<string>("Title");

                    b.Property<int>("value");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Student", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Number");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Subject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Teacher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Office");

                    b.Property<long?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Test", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("SubjectId");

                    b.Property<long?>("TeacherId");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.TestResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Grade");

                    b.Property<long?>("StudentId");

                    b.Property<long?>("TestId");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TestId");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Login");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Answer", b =>
                {
                    b.HasOne("AgileMethodsTestFramework.Models.Question")
                        .WithMany("CorrectAnswer")
                        .HasForeignKey("QuestionId");

                    b.HasOne("AgileMethodsTestFramework.Models.Question")
                        .WithMany("PossibleAnswers")
                        .HasForeignKey("QuestionId1");

                    b.HasOne("AgileMethodsTestFramework.Models.TestResult")
                        .WithMany("Answers")
                        .HasForeignKey("TestResultId");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Question", b =>
                {
                    b.HasOne("AgileMethodsTestFramework.Models.Test")
                        .WithMany("Questions")
                        .HasForeignKey("TestId");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Student", b =>
                {
                    b.HasOne("AgileMethodsTestFramework.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Subject", b =>
                {
                    b.HasOne("AgileMethodsTestFramework.Models.User")
                        .WithMany("subjects")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Teacher", b =>
                {
                    b.HasOne("AgileMethodsTestFramework.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.Test", b =>
                {
                    b.HasOne("AgileMethodsTestFramework.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.HasOne("AgileMethodsTestFramework.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("AgileMethodsTestFramework.Models.TestResult", b =>
                {
                    b.HasOne("AgileMethodsTestFramework.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.HasOne("AgileMethodsTestFramework.Models.Test")
                        .WithMany("Results")
                        .HasForeignKey("TestId");
                });
#pragma warning restore 612, 618
        }
    }
}
